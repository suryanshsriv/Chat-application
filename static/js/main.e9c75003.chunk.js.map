{"version":3,"sources":["misc/firebase.js","pages/SignIn.js","context/profile.context.js","components/PrivateRoute.js","misc/custom-hooks.js","components/CreateRoomBtnModal.js","misc/helpers.js","components/ProfileAvatar.js","components/dashboard/AvatarUploadBtn.js","components/EditableInput.js","components/dashboard/ProviderBlock.js","components/dashboard/index.js","components/dashboard/DashboardToggle.js","context/rooms.context.js","components/rooms/RoomItem.js","components/rooms/ChatRoomList.js","components/Sidebar.js","context/current-room.context.js","components/dashboard/chat-window/top/EditRoomBtnDrawer.js","components/dashboard/chat-window/top/RoomInfoBtnModal.js","components/dashboard/chat-window/top/index.js","components/PresenceDot.js","components/dashboard/chat-window/messages/ProfileInfoBtnModal.js","components/dashboard/chat-window/messages/IconBtnControl.js","components/dashboard/chat-window/messages/ImgBtnModal.js","components/dashboard/chat-window/messages/MessageItem.js","components/dashboard/chat-window/messages/index.js","components/dashboard/chat-window/bottom/AttachmentBtnModal.js","components/dashboard/chat-window/bottom/AudioMsgBtn.js","components/dashboard/chat-window/bottom/index.js","pages/home/Chat.js","pages/home/index.js","components/PublicRoute.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","storage","SignIn","signInWithProvider","provider","a","signInWithPopup","additionalUserInfo","user","isNewUser","ref","uid","set","name","displayName","createdAt","ServerValue","TIMESTAMP","Alert","success","error","message","Container","Grid","className","Row","Col","xs","md","mdOffset","Panel","Button","block","color","onClick","GoogleAuthProvider","Icon","icon","FacebookAuthProvider","isOfflineForDatabase","state","last_changed","isOnlineForDatabase","ProfileContext","createContext","ProfilePrvider","children","useState","profile","setProfile","isLoading","setIsLoading","useEffect","userRef","userStatusRef","authUnSub","onAuthStateChanged","authObj","on","snap","val","data","avatar","email","snapshot","onDisconnect","then","off","Provider","value","useProfile","useContext","PrivateRoute","routeProps","Loader","center","vertical","size","content","speed","to","useModalState","defaultVallue","isOpen","setIsOpen","open","useCallback","close","useMediaQuery","query","window","matchMedia","matches","setMatches","queryList","listener","evt","addListener","removeListener","StringType","Schema","Types","model","Model","isRequired","description","INITIAL_FORM","CreateRoomBtnModal","formValue","setFormValue","fromRef","useRef","onFromChange","onSubmit","current","check","newRoomData","admins","currentUser","push","info","Modal","show","onHide","Header","Title","Body","Form","fluid","onChange","FormGroup","ControlLabel","FormControl","placeholder","componentClass","Footer","appearance","disabled","getNameInitials","splitName","toUpperCase","split","initials","forEach","el","transformToArrayWithId","snapVal","Object","keys","map","roomId","id","getUserUpdates","userId","keyToUpdate","db","updates","getMsgs","orderByChild","equalTo","once","getRooms","Promise","all","mSnap","rSnap","msgSnap","key","roomSnap","ProfileAvatar","avatarProps","Avatar","circle","acceptedFileTypes","AvatarUploadBtn","img","setImg","avatarEditorRef","getBlob","canvas","resolve","reject","toBlob","blob","Error","onUploadClick","getImageScaledToCanvas","avatarFileRef","child","put","cacheControl","uploadAvatarRefult","getDownloadURL","downloadURL","update","src","htmlFor","type","accept","ev","currFiles","target","files","length","file","includes","isValidFile","warning","image","width","height","border","borderRadius","rotate","EditableInput","initialValue","onSave","label","emptyMsg","wrapperClassName","inputProps","input","setInput","isEditable","setIsEditabele","onInputChange","onEditClick","p","onSaveClick","trimmed","trim","InputGroup","Input","ProviderBlock","providerData","some","providerId","isConnected","setIsConnected","updateIsConnected","unlink","link","Tag","closable","onClose","Dashboard","onSignOut","newData","Drawer","Divider","DashboardToggle","isMobile","signOut","catch","err","full","placement","RoomsContext","RoomsProvider","rooms","setRooms","roomListRef","useRooms","RoomItem","room","lastMessage","datetime","Date","author","sixe","text","contentType","slice","indexOf","ChatRoomList","aboveElHeight","location","useLocation","Nav","reversed","style","activeKey","pathname","Item","Link","eventKey","Sidebar","topSideBarRef","setHeight","scrollHeight","CurrentRoomContext","CurrentRoomProvider","useCurrentRoom","selector","useContextSelector","EditRoomBtnDrawer","chatId","useParams","v","updateData","newName","lable","rows","newDesc","memo","RoomInfoBtnModal","Top","isAdmin","ButtonToolbar","getColor","presence","getText","toLocaleDateString","PresenceDot","setPresence","exists","usePresence","Whisper","trigger","speaker","Tooltip","Badge","backgroundColor","ProfileInfoBtnModal","btnProps","shortName","memberSince","ConditionalBadge","condition","IconBtnControl","isVisible","iconName","tooltip","badgeContent","props","visibility","delay","delayHide","delayShow","IconButton","ImgBtnModal","fileName","alt","href","rel","renderFileMessage","url","controls","MessageItem","handleAdmin","handleLike","handleDelete","likes","likeCount","setValue","handleMouseOver","handleMouseOut","node","addEventListener","removeEventListener","useHover","selfRef","isHovered","isMessageAuthorAdmin","isAuthor","canGrantAdmin","isLiked","canShowIcons","messagesRef","Messages","messages","setMessage","limit","setLimit","isChatEmpty","canShowMessages","loadMessages","limitToLast","threshold","scrollTop","clientHeight","shouldScrollToBotom","onLoadMore","oldHeight","setTimeout","newHeight","adminsRef","transaction","alertMsg","msgId","messageRef","msg","confirm","isLast","fileRef","refFromURL","delete","groupingKeyFn","groups","item","toDateString","reduce","result","groupingKey","items","date","msgs","renderMessages","AttachmentBtnModal","afterUpload","fileList","setFileList","onUpload","uploadPromises","f","now","blobFile","uploadSnapshots","shapePromises","metadata","Uploader","autoUpload","action","fileArr","filtered","filter","multiple","listType","AudioMsgBtn","isRecording","setIsRecording","clasName","record","onStop","mimeType","assembleMessage","Bottom","onSendClick","msgData","messageId","lastMsgId","pop","onKeyDown","keyCode","preventDefault","Chat","currentRoom","find","currentRoomData","Home","isDesktop","isExact","useRouteMatch","canRenderSidebar","exact","path","PublicRoute","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9c75003.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/database';\r\nimport 'firebase/compat/storage';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDDC2lCsy2fGuJsLkttIlrGWFwkgoaww5o\",\r\n    authDomain: \"chat-web-app-a7729.firebaseapp.com\",\r\n    databaseURL: \"https://chat-web-app-a7729-default-rtdb.firebaseio.com\",\r\n    projectId: \"chat-web-app-a7729\",\r\n    storageBucket: \"chat-web-app-a7729.appspot.com\",\r\n    messagingSenderId: \"985916971305\",\r\n    appId: \"1:985916971305:web:939220a984941e1d04bf38\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = firebase.initializeApp(config);\r\nexport const auth = app.auth();\r\nexport const database = app.database();\r\nexport const storage = app.storage();","import React from 'react';\r\nimport { Container, Grid, Panel, Row, Col, Icon, Button, Alert } from 'rsuite';\r\n\r\nimport firebase from 'firebase/compat/app';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\nconst SignIn = () => {\r\n    const signInWithProvider = async provider => {\r\n        try {\r\n            const { additionalUserInfo, user } = await auth.signInWithPopup(provider);\r\n            if (additionalUserInfo.isNewUser) {\r\n                await database.ref(`/profiles/${user.uid}`).set({\r\n                    name: user.displayName,\r\n                    createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n                });\r\n            }\r\n            Alert.success('Signed In', 4000);\r\n        } catch (err) {\r\n            Alert.error(err.message, 4000);\r\n        }\r\n    };\r\n    const onFacebookSignIn = () => {\r\n        signInWithProvider(new firebase.auth.FacebookAuthProvider());\r\n    };\r\n    const onGoogleSignIn = () => {\r\n        signInWithProvider(new firebase.auth.GoogleAuthProvider());\r\n    };\r\n    return ( <\r\n        Container >\r\n        <\r\n        Grid className = \"mt-page\" >\r\n        <\r\n        Row >\r\n        <\r\n        Col xs = { 24 }\r\n        md = { 12 }\r\n        mdOffset = { 6 } >\r\n        <\r\n        Panel >\r\n        <\r\n        div className = \"text-center\" >\r\n        <\r\n        h2 > Welcome to chat - app < /h2> <\r\n        p > A progressive chat platform < /p> <\r\n        /div> <\r\n        div className = \"mt-3\" >\r\n        <\r\n        Button block color = \"green\"\r\n        onClick = { onGoogleSignIn } >\r\n        <\r\n        Icon icon = \"google\" / > Continue With Google <\r\n        /Button> <\r\n        Button block color = \"blue\"\r\n        onClick = { onFacebookSignIn } >\r\n        <\r\n        Icon icon = \"facebook\" / > Continue With Facebook <\r\n        /Button> <\r\n        /div> <\r\n        /Panel> <\r\n        /Col> <\r\n        /Row> <\r\n        /Grid> <\r\n        /Container>\r\n    );\r\n};\r\n\r\nexport default SignIn;","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport firebase from 'firebase/compat/app';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\nexport const isOfflineForDatabase = {\r\n  state: 'offline',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst isOnlineForDatabase = {\r\n  state: 'online',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst ProfileContext = createContext();\r\nexport const ProfilePrvider = ({ children }) => {\r\n  const [profile, setProfile] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let userRef;\r\n    let userStatusRef;\r\n    const authUnSub = auth.onAuthStateChanged(authObj => {\r\n      if (authObj) {\r\n        userStatusRef = database.ref(`/status/${authObj.uid}`);\r\n        userRef = database.ref(`/profiles/${authObj.uid}`);\r\n        userRef.on('value', snap => {\r\n          const { name, createdAt, avatar } = snap.val();\r\n          const data = {\r\n            name,\r\n            createdAt,\r\n            avatar,\r\n            uid: authObj.uid,\r\n            email: authObj.email,\r\n          };\r\n          setProfile(data);\r\n          setIsLoading(false);\r\n        });\r\n\r\n        database.ref('.info/connected').on('value', snapshot => {\r\n          if (!!snapshot.val() === false) {\r\n            return;\r\n          }\r\n\r\n          userStatusRef\r\n            .onDisconnect()\r\n            .set(isOfflineForDatabase)\r\n            .then(() => {\r\n              userStatusRef.set(isOnlineForDatabase);\r\n            });\r\n        });\r\n      } else {\r\n        if (userRef) userRef.off();\r\n\r\n        if (userStatusRef) userStatusRef.off();\r\n        database.ref('.info/connected').off();\r\n        setProfile(null);\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n    return () => {\r\n      authUnSub();\r\n      database.ref('.info/connected').off();\r\n      if (userRef) userRef.off();\r\n      if (userStatusRef) userStatusRef.off();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <ProfileContext.Provider value={{ isLoading, profile }}>\r\n      {children}\r\n    </ProfileContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useProfile = () => useContext(ProfileContext);\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nconst PrivateRoute = ({ children, ...routeProps }) => {\r\n  const { isLoading, profile } = useProfile();\r\n  if (isLoading && !profile) {\r\n    return (\r\n      <Container>\r\n        <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\r\n      </Container>\r\n    );\r\n  }\r\n  if (!profile && !isLoading) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n  return <Route {...routeProps}>{children}</Route>;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { database } from './firebase';\r\n\r\nexport function useModalState(defaultVallue = false) {\r\n  const [isOpen, setIsOpen] = useState(defaultVallue);\r\n\r\n  const open = useCallback(() => setIsOpen(true), []);\r\n  const close = useCallback(() => setIsOpen(false), []);\r\n  return { isOpen, open, close };\r\n}\r\n\r\nexport const useMediaQuery = query => {\r\n  const [matches, setMatches] = useState(\r\n    () => window.matchMedia(query).matches\r\n  );\r\n\r\n  useEffect(() => {\r\n    const queryList = window.matchMedia(query);\r\n    setMatches(queryList.matches);\r\n\r\n    const listener = evt => setMatches(evt.matches);\r\n\r\n    queryList.addListener(listener);\r\n    return () => queryList.removeListener(listener);\r\n  }, [query]);\r\n\r\n  return matches;\r\n};\r\n\r\nexport function usePresence(uid) {\r\n  const [presence, setPresence] = useState(null);\r\n  useEffect(() => {\r\n    const userStatusRef = database.ref(`status/${uid}`);\r\n    userStatusRef.on('value', snap => {\r\n      if (snap.exists()) {\r\n        const data = snap.val();\r\n        setPresence(data);\r\n      }\r\n    });\r\n    return () => {\r\n      userStatusRef.off();\r\n    };\r\n  }, [uid]);\r\n  return presence;\r\n}\r\n\r\nexport function useHover() {\r\n  const [value, setValue] = useState(false);\r\n  const ref = useRef(null);\r\n  const handleMouseOver = () => setValue(true);\r\n  const handleMouseOut = () => setValue(false);\r\n  useEffect(\r\n    () => {\r\n      const node = ref.current;\r\n      if (node) {\r\n        node.addEventListener('mouseover', handleMouseOver);\r\n        node.addEventListener('mouseout', handleMouseOut);\r\n      }\r\n      return () => {\r\n        node.removeEventListener('mouseover', handleMouseOver);\r\n        node.removeEventListener('mouseout', handleMouseOut);\r\n      };\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [ref.current] // Recall only if ref changes\r\n  );\r\n  return [ref, value];\r\n}\r\n","import React, { useCallback, useRef, useState } from 'react';\r\nimport {\r\n  Alert,\r\n  Button,\r\n  ControlLabel,\r\n  Form,\r\n  FormControl,\r\n  FormGroup,\r\n  Icon,\r\n  Modal,\r\n  Schema,\r\n} from 'rsuite';\r\nimport firebase from 'firebase/compat/app';\r\nimport { useModalState } from '../misc/custom-hooks';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nconst model = Schema.Model({\r\n  name: StringType().isRequired('Chat name is required'),\r\n  description: StringType().isRequired('Description is required'),\r\n});\r\n\r\nconst INITIAL_FORM = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\nconst CreateRoomBtnModal = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const [formValue, setFormValue] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const fromRef = useRef();\r\n\r\n  const onFromChange = useCallback(value => {\r\n    setFormValue(value);\r\n  }, []);\r\n\r\n  const onSubmit = async () => {\r\n    if (!fromRef.current.check()) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    const newRoomData = {\r\n      ...formValue,\r\n      createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n      admins: {\r\n        [auth.currentUser.uid]: true,\r\n      },\r\n    };\r\n    try {\r\n      await database.ref('rooms').push(newRoomData);\r\n      Alert.info(`${formValue.name} has been created`, 4000);\r\n      setIsLoading(false);\r\n      setFormValue(INITIAL_FORM);\r\n      close();\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      Alert.error(error.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-1\">\r\n      <Button onClick={open} color=\"green\" block>\r\n        <Icon icon=\"creative\" /> Create new chat room\r\n      </Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>New chat room</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form\r\n            fluid\r\n            onChange={onFromChange}\r\n            formValue={formValue}\r\n            model={model}\r\n            ref={fromRef}\r\n          >\r\n            <FormGroup>\r\n              <ControlLabel>Room Name</ControlLabel>\r\n              <FormControl name=\"name\" placeholder=\"Enter room name...\" />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>Description</ControlLabel>\r\n              <FormControl\r\n                componentClass=\"textarea\"\r\n                name=\"description\"\r\n                placeholder=\"Enter room description...\"\r\n              />\r\n            </FormGroup>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            block\r\n            appearance=\"primary\"\r\n            onClick={onSubmit}\r\n            disabled={isLoading}\r\n          >\r\n            Create Chat Room\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateRoomBtnModal;\r\n","export function getNameInitials(name) {\r\n  const splitName = name.toUpperCase().split(' ');\r\n  let initials = '';\r\n  splitName.forEach(el => {\r\n    initials += el[0];\r\n  });\r\n  return initials;\r\n}\r\n\r\nexport function transformToArrayWithId(snapVal) {\r\n  return snapVal\r\n    ? Object.keys(snapVal).map(roomId => {\r\n        return { ...snapVal[roomId], id: roomId };\r\n      })\r\n    : [];\r\n}\r\n\r\nexport async function getUserUpdates(userId, keyToUpdate, value, db) {\r\n  const updates = {};\r\n  updates[`/profiles/${userId}/${keyToUpdate}`] = value;\r\n\r\n  const getMsgs = db\r\n    .ref('/messages')\r\n    .orderByChild('author/uid')\r\n    .equalTo(userId)\r\n    .once('value');\r\n  const getRooms = db\r\n    .ref('/rooms')\r\n    .orderByChild('lastMessage/author/uid')\r\n    .equalTo(userId)\r\n    .once('value');\r\n\r\n  const [mSnap, rSnap] = await Promise.all([getMsgs, getRooms]);\r\n\r\n  mSnap.forEach(msgSnap => {\r\n    updates[`/messages/${msgSnap.key}/author/${keyToUpdate}`] = value;\r\n  });\r\n  rSnap.forEach(roomSnap => {\r\n    updates[`/rooms/${roomSnap.key}/lastMessage/author/${keyToUpdate}`] = value;\r\n  });\r\n\r\n  return updates;\r\n}\r\n\r\nexport function transformToArray(snapVal) {\r\n  return snapVal ? Object.keys(snapVal) : [];\r\n}\r\n\r\nexport function groupBy(array, groupingKeyFn) {\r\n  return array.reduce((result, item) => {\r\n    const groupingKey = groupingKeyFn(item);\r\n    if (!result[groupingKey]) {\r\n      result[groupingKey] = [];\r\n    }\r\n    result[groupingKey].push(item);\r\n    return result;\r\n  }, {});\r\n}\r\n","import React from 'react';\r\nimport { Avatar } from 'rsuite';\r\nimport { getNameInitials } from '../misc/helpers';\r\n\r\nconst ProfileAvatar = ({ name, ...avatarProps }) => {\r\n  return (\r\n    <>\r\n      <Avatar circle {...avatarProps}>\r\n        {getNameInitials(name)}\r\n      </Avatar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileAvatar;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Alert, Button, Modal } from 'rsuite';\r\nimport AvatarEditor from 'react-avatar-editor';\r\nimport { useModalState } from '../../misc/custom-hooks';\r\nimport { database, storage } from '../../misc/firebase';\r\nimport { useProfile } from '../../context/profile.context';\r\nimport ProfileAvatar from '../ProfileAvatar';\r\nimport { getUserUpdates } from '../../misc/helpers';\r\n\r\nconst fileInputTypes = '.png, .jpeg, .jpg';\r\nconst acceptedFileTypes = ['image/png', 'image/jpeg', 'image/pjpeg'];\r\nconst isValidFile = file => acceptedFileTypes.includes(file.type);\r\n\r\nconst AvatarUploadBtn = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const [img, setImg] = useState(null);\r\n  const avatarEditorRef = useRef();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { profile } = useProfile();\r\n\r\n  const getBlob = canvas => {\r\n    return new Promise((resolve, reject) => {\r\n      canvas.toBlob(blob => {\r\n        if (blob) {\r\n          resolve(blob);\r\n        } else {\r\n          reject(new Error('File process error'));\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const onFileInputChange = ev => {\r\n    const currFiles = ev.target.files;\r\n    if (currFiles.length === 1) {\r\n      const file = currFiles[0];\r\n      if (isValidFile(file)) {\r\n        setImg(file);\r\n        open();\r\n      } else {\r\n        Alert.warning(`Oh boy, you selected the wrong file type ${file.type}`);\r\n      }\r\n    }\r\n  };\r\n  const onUploadClick = async () => {\r\n    const canvas = avatarEditorRef.current.getImageScaledToCanvas();\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      const blob = await getBlob(canvas);\r\n      const avatarFileRef = storage\r\n        .ref(`/profile/${profile.uid}`)\r\n        .child('avatar');\r\n      const uploadAvatarRefult = await avatarFileRef.put(blob, {\r\n        cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n      });\r\n      const downloadURL = await uploadAvatarRefult.ref.getDownloadURL();\r\n\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        'avatar',\r\n        downloadURL,\r\n        database\r\n      );\r\n      await database.ref().update(updates);\r\n\r\n      Alert.info('Avatar has been uploaded', 4000);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"mt-3 text-center\">\r\n      <ProfileAvatar\r\n        src={profile.avatar}\r\n        name={profile.name}\r\n        className=\"width-200 height-200 img-fullsize font-huge\"\r\n      />\r\n      <div>\r\n        <label\r\n          htmlFor=\"avatar-upload\"\r\n          className=\"d-block cursor-pointer padded\"\r\n        >\r\n          Select new Avatar\r\n          <input\r\n            id=\"avatar-upload\"\r\n            type=\"file\"\r\n            className=\"d-none\"\r\n            accept={fileInputTypes}\r\n            onChange={onFileInputChange}\r\n          />\r\n        </label>\r\n        <Modal show={isOpen} onHide={close}>\r\n          <Modal.Header>\r\n            <Modal.Title>Adjust and Upload your new Avatar</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {img && (\r\n              <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n                <AvatarEditor\r\n                  ref={avatarEditorRef}\r\n                  image={img}\r\n                  width={200}\r\n                  height={200}\r\n                  border={10}\r\n                  borderRadius={100}\r\n                  rotate={0}\r\n                />\r\n              </div>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              appearance=\"ghost\"\r\n              block\r\n              onClick={onUploadClick}\r\n              disabled={isLoading}\r\n            >\r\n              Upload Avatar\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvatarUploadBtn;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Alert, Icon, Input, InputGroup } from 'rsuite';\r\n\r\nconst EditableInput = ({\r\n  initialValue,\r\n  onSave,\r\n  label = null,\r\n  placeholder = 'Write your name',\r\n  emptyMsg = 'Input is empty',\r\n  wrapperClassName = '',\r\n  ...inputProps\r\n}) => {\r\n  const [input, setInput] = useState(initialValue);\r\n  const [isEditable, setIsEditabele] = useState(false);\r\n  const onInputChange = useCallback(value => {\r\n    setInput(value);\r\n  }, []);\r\n\r\n  const onEditClick = useCallback(() => {\r\n    setIsEditabele(p => !p);\r\n    setInput(initialValue);\r\n  }, [initialValue]);\r\n  const onSaveClick = async () => {\r\n    const trimmed = input.trim();\r\n    if (trimmed === '') {\r\n      Alert.info(emptyMsg, 4000);\r\n      setInput(initialValue);\r\n    }\r\n\r\n    if (trimmed !== initialValue) {\r\n      await onSave(trimmed);\r\n    }\r\n    setIsEditabele(false);\r\n  };\r\n  return (\r\n    <div className={wrapperClassName}>\r\n      {label}\r\n      <InputGroup>\r\n        <Input\r\n          {...inputProps}\r\n          disabled={!isEditable}\r\n          placeholder={placeholder}\r\n          value={input}\r\n          onChange={onInputChange}\r\n        />\r\n        <InputGroup.Button onClick={onEditClick}>\r\n          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n        </InputGroup.Button>\r\n        {isEditable && (\r\n          <InputGroup.Button onClick={onSaveClick}>\r\n            <Icon icon=\"check\" />\r\n          </InputGroup.Button>\r\n        )}\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditableInput;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react';\r\nimport { Alert, Button, Icon, Tag } from 'rsuite';\r\nimport firebase from 'firebase/compat/app';\r\nimport { auth } from '../../misc/firebase';\r\n\r\nconst ProviderBlock = () => {\r\n  const [isConnected, setIsConnected] = useState({\r\n    'google.com': auth.currentUser.providerData.some(\r\n      data => data.providerId === 'google.com'\r\n    ),\r\n    'facebook.com': auth.currentUser.providerData.some(\r\n      data => data.providerId === 'facebook.com'\r\n    ),\r\n  });\r\n  const updateIsConnected = (providerId, value) =>\r\n    setIsConnected(p => {\r\n      return {\r\n        ...p,\r\n        [providerId]: value,\r\n      };\r\n    });\r\n\r\n  const unlink = async providerId => {\r\n    try {\r\n      if (auth.currentUser.providerData.length === 1)\r\n        throw new Error('You can not disconnect from your only Login method.');\r\n      await auth.currentUser.unlink(providerId);\r\n      updateIsConnected(providerId, false);\r\n      Alert.info(`Disconnected from ${providerId}`, 4000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n  const unlinkGoogle = () => unlink('google.com');\r\n  const unlinkFacebook = () => unlink('facebook.com');\r\n\r\n  const link = async provider => {\r\n    try {\r\n      await auth.signInWithPopup(provider);\r\n\r\n      Alert.success(`Linked to ${provider.providerId}`, 4000);\r\n      updateIsConnected(provider.providerId, true);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  const linkGoogle = () => {\r\n    link(new firebase.auth.GoogleAuthProvider());\r\n  };\r\n  const linkFacebook = () => {\r\n    link(new firebase.auth.FacebookAuthProvider());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isConnected['google.com'] && (\r\n        <Tag closable color=\"green\" onClose={unlinkGoogle}>\r\n          <Icon icon=\"google\" /> Connected\r\n        </Tag>\r\n      )}\r\n      {isConnected['facebook.com'] && (\r\n        <Tag closable color=\"blue\" onClose={unlinkFacebook}>\r\n          <Icon icon=\"facebook\" /> Connected\r\n        </Tag>\r\n      )}\r\n      <div className=\"mt-2\">\r\n        {!isConnected['google.com'] && (\r\n          <Button block color=\"green\" onClick={linkGoogle}>\r\n            <Icon icon=\"google\" /> Link to Google Account\r\n          </Button>\r\n        )}\r\n        {!isConnected['facebook.com'] && (\r\n          <Button block color=\"blue \" onClick={linkFacebook}>\r\n            <Icon icon=\"facebook\" /> Link to Facebook Account\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProviderBlock;\r\n","import React from 'react';\r\nimport { Alert, Button, Divider, Drawer } from 'rsuite';\r\nimport { useProfile } from '../../context/profile.context';\r\nimport { database } from '../../misc/firebase';\r\nimport { getUserUpdates } from '../../misc/helpers';\r\nimport AvatarUploadBtn from './AvatarUploadBtn';\r\nimport EditableInput from '../EditableInput';\r\nimport ProviderBlock from './ProviderBlock';\r\n\r\nconst Dashboard = ({ onSignOut }) => {\r\n  const { profile } = useProfile();\r\n  const onSave = async newData => {\r\n    try {\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        'name',\r\n        newData,\r\n        database\r\n      );\r\n      await database.ref().update(updates);\r\n\r\n      Alert.success('Username Updated!!', 4000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Drawer.Header>\r\n        <Drawer.Title>Dashboard</Drawer.Title>\r\n      </Drawer.Header>\r\n      <Drawer.Body>\r\n        <h3 className=\"pb-2\">Hey, {profile.name}</h3>\r\n        <ProviderBlock />\r\n        <Divider />\r\n        <EditableInput\r\n          name=\"nickname\"\r\n          initialValue={profile.name}\r\n          onSave={onSave}\r\n          label={<h6 className=\"mb-2\">Nickname</h6>}\r\n        />\r\n        <AvatarUploadBtn />\r\n      </Drawer.Body>\r\n      <Drawer.Footer>\r\n        <Button block color=\"red\" onClick={onSignOut}>\r\n          Sign Out\r\n        </Button>\r\n      </Drawer.Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useCallback } from 'react';\r\nimport { Alert, Button, Drawer, Icon } from 'rsuite';\r\nimport Dashboard from '.';\r\nimport { useMediaQuery, useModalState } from '../../misc/custom-hooks';\r\nimport { auth, database } from '../../misc/firebase';\r\nimport { isOfflineForDatabase } from '../../context/profile.context';\r\n\r\nconst DashboardToggle = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const isMobile = useMediaQuery('(max-width:992px)');\r\n  const onSignOut = useCallback(() => {\r\n    database\r\n      .ref(`/status/${auth.currentUser.uid}`)\r\n      .set(isOfflineForDatabase)\r\n      .then(() => {\r\n        auth.signOut();\r\n\r\n        Alert.info('Signed Out', 4000);\r\n        close();\r\n      })\r\n      .catch(err => {\r\n        Alert.error(err.message, 4000);\r\n      });\r\n  }, [close]);\r\n  return (\r\n    <>\r\n      <Button block color=\"blue\" onClick={open}>\r\n        <Icon icon=\"dashboard\" /> Dashboard\r\n      </Button>\r\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"left\">\r\n        <Dashboard onSignOut={onSignOut} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardToggle;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { database } from '../misc/firebase';\r\nimport { transformToArrayWithId } from '../misc/helpers';\r\n\r\nconst RoomsContext = createContext();\r\n\r\nexport const RoomsProvider = ({ children }) => {\r\n  const [rooms, setRooms] = useState(null);\r\n  useEffect(() => {\r\n    const roomListRef = database.ref('rooms');\r\n    roomListRef.on('value', snap => {\r\n      const data = transformToArrayWithId(snap.val());\r\n      setRooms(data);\r\n    });\r\n    return () => {\r\n      roomListRef.off();\r\n    };\r\n  }, []);\r\n  return (\r\n    <RoomsContext.Provider value={rooms}>{children}</RoomsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useRooms = () => useContext(RoomsContext);\r\n","import React from 'react';\r\nimport TimeAgo from 'timeago-react';\r\nimport ProfileAvatar from '../ProfileAvatar';\r\n\r\nconst RoomItem = ({ room }) => {\r\n  const { createdAt, name, lastMessage } = room;\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <h3 className=\"text-disappear\">{name}</h3>\r\n        <TimeAgo\r\n          datetime={\r\n            lastMessage ? new Date(lastMessage.createdAt) : new Date(createdAt)\r\n          }\r\n          className=\"font-formal text-black-45\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <span className=\"d-flex align-item-center text-black-70\">\r\n          {lastMessage ? (\r\n            <>\r\n              <div className=\"d-flex align-item-center\">\r\n                <ProfileAvatar\r\n                  src={lastMessage.author.avatar}\r\n                  name={lastMessage.author.name}\r\n                  sixe=\"sm\"\r\n                />\r\n              </div>\r\n              <div className=\"text-disappear ml-2\">\r\n                <div className=\"italic\">{lastMessage.author.name}</div>\r\n                <span>\r\n                  {lastMessage.text ||\r\n                    `${lastMessage.file.contentType\r\n                      .slice(lastMessage.file.contentType.indexOf('/') + 1)\r\n                      .toUpperCase()} File`}\r\n                </span>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <span>No messages yet...</span>\r\n          )}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomItem;\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Loader, Nav } from 'rsuite';\r\nimport { useRooms } from '../../context/rooms.context';\r\nimport RoomItem from './RoomItem';\r\n\r\nconst ChatRoomList = ({ aboveElHeight }) => {\r\n  const rooms = useRooms();\r\n  const location = useLocation();\r\n  return (\r\n    <Nav\r\n      appearance=\"subtle\"\r\n      vertical\r\n      reversed\r\n      className=\"overflow-y-scroll custom-scroll\"\r\n      style={{\r\n        height: `calc(100% - ${aboveElHeight}px - 21px)`,\r\n      }}\r\n      activeKey={location.pathname}\r\n    >\r\n      {!rooms && (\r\n        <Loader center vertical content=\"Loading\" speed=\"normal\" size=\"md\" />\r\n      )}\r\n      {rooms &&\r\n        rooms.length > 0 &&\r\n        rooms.map(room => (\r\n          <Nav.Item\r\n            componentClass={Link}\r\n            to={`/chat/${room.id}`}\r\n            key={room.id}\r\n            eventKey={`/chat/${room.id}`}\r\n          >\r\n            <RoomItem room={room} />\r\n          </Nav.Item>\r\n        ))}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default ChatRoomList;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Divider } from 'rsuite';\r\nimport CreateRoomBtnModal from './CreateRoomBtnModal';\r\nimport DashboardToggle from './dashboard/DashboardToggle';\r\nimport ChatRoomList from './rooms/ChatRoomList';\r\n\r\nconst Sidebar = () => {\r\n  const topSideBarRef = useRef();\r\n  const [height, setHeight] = useState(0);\r\n  useEffect(() => {\r\n    if (topSideBarRef.current) {\r\n      setHeight(topSideBarRef.current.scrollHeight);\r\n    }\r\n  }, [topSideBarRef]);\r\n  return (\r\n    <div className=\"h-100 pt-2\">\r\n      <div ref={topSideBarRef}>\r\n        <div>\r\n          <DashboardToggle />\r\n        </div>\r\n\r\n        <CreateRoomBtnModal />\r\n        <Divider>Join Conversation</Divider>\r\n      </div>\r\n\r\n      <ChatRoomList aboveElHeight={height} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { createContext, useContextSelector } from 'use-context-selector';\r\n\r\nconst CurrentRoomContext = createContext();\r\nexport const CurrentRoomProvider = ({ children, data }) => {\r\n  return (\r\n    <CurrentRoomContext.Provider value={data}>\r\n      {children}\r\n    </CurrentRoomContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCurrentRoom = selector =>\r\n  useContextSelector(CurrentRoomContext, selector);\r\n","import React, { memo } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button, Drawer } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../../context/current-room.context';\r\nimport { useMediaQuery, useModalState } from '../../../../misc/custom-hooks';\r\nimport { database } from '../../../../misc/firebase';\r\nimport EditableInput from '../../../EditableInput';\r\n\r\nconst EditRoomBtnDrawer = () => {\r\n  const { chatId } = useParams();\r\n\r\n  const { isOpen, open, close } = useModalState();\r\n  const name = useCurrentRoom(v => v.name);\r\n  const description = useCurrentRoom(v => v.description);\r\n  const isMobile = useMediaQuery(`(max-width: 992px)`);\r\n\r\n  const updateData = (key, value) => {\r\n    database\r\n      .ref(`/rooms/${chatId}`)\r\n      .child(key)\r\n      .set(value)\r\n      .then(() => Alert.success('Successfully Updates!!!', 4000))\r\n      .catch(err => Alert.error(err.message, 4000));\r\n  };\r\n\r\n  const onNameSave = newName => {\r\n    updateData('name', newName);\r\n  };\r\n  const onDescriptionSave = newDesc => {\r\n    updateData('description', newDesc);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"br-circle\" size=\"sm\" color=\"orange\" onClick={open}>\r\n        A\r\n      </Button>\r\n\r\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"right\">\r\n        <Drawer.Header className=\"font-bolder\">\r\n          Edit Room Information\r\n        </Drawer.Header>\r\n        <Drawer.Body>\r\n          <EditableInput\r\n            initialValue={name}\r\n            onSave={onNameSave}\r\n            lable={<h6 className=\"mb-2\">Name</h6>}\r\n            emptyMsg=\"Name can not be empty\"\r\n          />\r\n          <EditableInput\r\n            componentClass=\"textarea\"\r\n            rows={5}\r\n            initialValue={description}\r\n            onSave={onDescriptionSave}\r\n            lable={<h6 className=\"mb-2\">Description</h6>}\r\n            emptyMsg=\"Description can not be empty\"\r\n            wrapperClassName=\"mt-3\"\r\n          />\r\n        </Drawer.Body>\r\n        <Drawer.Footer>\r\n          <Button block onClick={close} color=\"cyan\">\r\n            Close\r\n          </Button>\r\n        </Drawer.Footer>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(EditRoomBtnDrawer);\r\n","import React, { memo } from 'react';\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../../context/current-room.context';\r\nimport { useModalState } from '../../../../misc/custom-hooks';\r\n\r\nconst RoomInfoBtnModal = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const description = useCurrentRoom(v => v.description);\r\n  const name = useCurrentRoom(v => v.name);\r\n\r\n  return (\r\n    <>\r\n      <Button appearance=\"link\" className=\"px-0\" onClick={open}>\r\n        Room Information\r\n      </Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>About {name}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h6 className=\"mb-1\">Description</h6>\r\n          <p>{description}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(RoomInfoBtnModal);\r\n","import React, { memo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ButtonToolbar, Icon } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../../context/current-room.context';\r\nimport { useMediaQuery } from '../../../../misc/custom-hooks';\r\nimport EditRoomBtnDrawer from './EditRoomBtnDrawer';\r\nimport RoomInfoBtnModal from './RoomInfoBtnModal';\r\n\r\nconst Top = () => {\r\n  const name = useCurrentRoom(v => v.name);\r\n  const isMobile = useMediaQuery('(max-width:992px');\r\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <h4 className=\"text-disappear d-flex align-items-center\">\r\n          <Icon\r\n            componentClass={Link}\r\n            to=\"/\"\r\n            icon=\"arrow-circle-left\"\r\n            className={\r\n              isMobile\r\n                ? 'd-inline-block p-0 mr-2 text-blue link-unstyled'\r\n                : 'd-none'\r\n            }\r\n            size=\"2x\"\r\n          />\r\n          <span className=\"text-disappear\">{name}</span>\r\n        </h4>\r\n        <ButtonToolbar className=\"ws-nowrap\">\r\n          {isAdmin && <EditRoomBtnDrawer />}\r\n        </ButtonToolbar>\r\n      </div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <span>todo</span>\r\n        <RoomInfoBtnModal />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Top);\r\n","import React from 'react';\r\nimport { Badge, Tooltip, Whisper } from 'rsuite';\r\nimport { usePresence } from '../misc/custom-hooks';\r\n\r\nconst getColor = presence => {\r\n  if (!presence) return 'grey';\r\n  switch (presence.state) {\r\n    case 'online':\r\n      return 'green';\r\n    case 'offline':\r\n      return 'purple';\r\n    default:\r\n      return 'grey';\r\n  }\r\n};\r\n\r\nconst getText = presence => {\r\n  if (!presence) return 'Unnknown State';\r\n  return presence.state === 'online'\r\n    ? 'Online'\r\n    : `Last online ${new Date(presence.last_changed).toLocaleDateString()}`;\r\n};\r\n\r\nconst PresenceDot = ({ uid }) => {\r\n  const presence = usePresence(uid);\r\n  return (\r\n    <Whisper\r\n      placement=\"top\"\r\n      trigger=\"hover\"\r\n      speaker={<Tooltip>{getText(presence)}</Tooltip>}\r\n    >\r\n      <Badge\r\n        className=\"cursor-poiner\"\r\n        style={{ backgroundColor: getColor(presence) }}\r\n      />\r\n    </Whisper>\r\n  );\r\n};\r\n\r\nexport default PresenceDot;\r\n","import React from 'react';\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useModalState } from '../../../../misc/custom-hooks';\r\nimport ProfileAvatar from '../../../ProfileAvatar';\r\n\r\nconst ProfileInfoBtnModal = ({ profile, children, ...btnProps }) => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const shortName = profile.name.split(' ')[0];\r\n  const { name, avatar, createdAt } = profile;\r\n  const memberSince = new Date(createdAt).toLocaleDateString();\r\n\r\n  return (\r\n    <>\r\n      <Button {...btnProps} onClick={open}>\r\n        {shortName}\r\n      </Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>{shortName} profile</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"text-center\">\r\n          <ProfileAvatar\r\n            src={avatar}\r\n            name={name}\r\n            className=\"width-200 height-200 img-fullsize font-huge\"\r\n          />\r\n          <h4 className=\"mt-2\">{name}</h4>\r\n          <p>Member since {memberSince}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {children}\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileInfoBtnModal;\r\n","import React from 'react';\r\nimport { Badge, Icon, IconButton, Tooltip, Whisper } from 'rsuite';\r\n\r\nconst ConditionalBadge = ({ condition, children }) => {\r\n  return condition ? <Badge content={condition}>{children}</Badge> : children;\r\n};\r\n\r\nconst IconBtnControl = ({\r\n  isVisible,\r\n  iconName,\r\n  tooltip,\r\n  onClick,\r\n  badgeContent,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"ml-2\"\r\n      style={{ visibility: isVisible ? 'visible' : 'hidden' }}\r\n    >\r\n      <ConditionalBadge condition={badgeContent}>\r\n        <Whisper\r\n          placement=\"top\"\r\n          delay={0}\r\n          delayHide={0}\r\n          delayShow={0}\r\n          trigger=\"hover\"\r\n          speaker={<Tooltip>{tooltip}</Tooltip>}\r\n        >\r\n          <IconButton\r\n            {...props}\r\n            onClick={onClick}\r\n            circle\r\n            size=\"xs\"\r\n            icon={<Icon icon={iconName} />}\r\n          />\r\n        </Whisper>\r\n      </ConditionalBadge>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IconBtnControl;\r\n","import React from 'react';\r\nimport { Modal } from 'rsuite';\r\nimport { useModalState } from '../../../../misc/custom-hooks';\r\n\r\nconst ImgBtnModal = ({ src, fileName }) => {\r\n  const { isOpen, open, close } = useModalState();\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"image\"\r\n        src={src}\r\n        alt=\"file\"\r\n        onClick={open}\r\n        className=\"mw-100 mh-100 w-auto\"\r\n      />\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>{fileName}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div>\r\n            <img src={src} alt=\"file\" height=\"100%\" width=\"100%\" />\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <a href={src} target=\"-blank\" rel=\"noopenner noreferrer\">\r\n            View Original\r\n          </a>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImgBtnModal;\r\n","/* eslint-disable jsx-a11y/media-has-caption */\r\nimport React, { memo } from 'react';\r\nimport { Button } from 'rsuite';\r\nimport TimeAgo from 'timeago-react';\r\nimport PresenceDot from '../../../PresenceDot';\r\nimport ProfileAvatar from '../../../ProfileAvatar';\r\nimport ProfileInfoBtnModal from './ProfileInfoBtnModal';\r\nimport { useCurrentRoom } from '../../../../context/current-room.context';\r\nimport { auth } from '../../../../misc/firebase';\r\nimport IconBtnControl from './IconBtnControl';\r\nimport { useHover, useMediaQuery } from '../../../../misc/custom-hooks';\r\nimport ImgBtnModal from './ImgBtnModal';\r\n\r\nconst renderFileMessage = file => {\r\n  if (file.contentType.includes('image')) {\r\n    return (\r\n      <div className=\"height-220\">\r\n        <ImgBtnModal src={file.url} fileName={file.name} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (file.contentType.includes('audio')) {\r\n    return (\r\n      <audio controls>\r\n        <source src={file.url} type=\"audio/mp3\" />\r\n        Your browser does not support the audio element.\r\n      </audio>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <a href={file.url} target=\"_blank\" rel=\"noreferrer\">\r\n      Download {file.name}\r\n    </a>\r\n  );\r\n};\r\n\r\nconst MessageItem = ({ message, handleAdmin, handleLike, handleDelete }) => {\r\n  const { author, createdAt, text, file, likes, likeCount } = message;\r\n\r\n  const [selfRef, isHovered] = useHover();\r\n  const isMobile = useMediaQuery('(max-width:992px)');\r\n\r\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\r\n  const admins = useCurrentRoom(v => v.admins);\r\n\r\n  const isMessageAuthorAdmin = admins.includes(author.uid);\r\n  const isAuthor = auth.currentUser.uid === author.uid;\r\n  const canGrantAdmin = isAdmin && !isAuthor;\r\n\r\n  const isLiked = likes && Object.keys(likes).includes(auth.currentUser.uid);\r\n  const canShowIcons = isHovered || isMobile;\r\n\r\n  return (\r\n    <li\r\n      className={`padded mb-1 cursor-pointer ${isHovered ? 'bg-black-02' : ''}`}\r\n      ref={selfRef}\r\n    >\r\n      <div className=\"d-flex align-items-center  font-bolder mb-1\">\r\n        <PresenceDot uid={author.uid} />\r\n        <ProfileAvatar\r\n          src={author.avatar}\r\n          name={author.name}\r\n          className=\"ml-1 \"\r\n          size=\"xs\"\r\n        />\r\n\r\n        <ProfileInfoBtnModal\r\n          profile={author}\r\n          appearance=\"link\"\r\n          className=\"p-0 ml-1 text-black\"\r\n        >\r\n          {canGrantAdmin && (\r\n            <Button block onClick={() => handleAdmin(author.uid)} color=\"blue\">\r\n              {isMessageAuthorAdmin\r\n                ? 'Remove Admin privilages'\r\n                : 'Grant Admin privilages'}\r\n            </Button>\r\n          )}\r\n        </ProfileInfoBtnModal>\r\n        <TimeAgo\r\n          datetime={createdAt}\r\n          className=\"font-formal text-black-45 ml-2\"\r\n        />\r\n\r\n        <IconBtnControl\r\n          {...(isLiked ? { color: 'red' } : {})}\r\n          isVisible={canShowIcons}\r\n          iconName=\"heart\"\r\n          tooltip={isLiked ? 'Unlike this message' : 'Like this message'}\r\n          badgeContent={likeCount}\r\n          onClick={() => handleLike(message.id)}\r\n        />\r\n        {isAuthor && (\r\n          <IconBtnControl\r\n            isVisible={canShowIcons}\r\n            iconName=\"close\"\r\n            tooltip=\"Delete this message\"\r\n            onClick={() => handleDelete(message.id, file)}\r\n          />\r\n        )}\r\n      </div>\r\n      {text && <div className=\"word-break-all\">{text}</div>}\r\n      {file && renderFileMessage(file)}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default memo(MessageItem);\r\n","/* eslint-disable consistent-return */\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button } from 'rsuite';\r\nimport { auth, database, storage } from '../../../../misc/firebase';\r\nimport { groupBy, transformToArrayWithId } from '../../../../misc/helpers';\r\nimport MessageItem from './MessageItem';\r\n\r\nconst PAGE_SIZE = 15;\r\nconst messagesRef = database.ref('/messages');\r\n\r\nfunction shouldScrollToBotom(node, threshold = 30) {\r\n  const percentage =\r\n    (100 * node.scrollTop) / (node.scrollHeight - node.clientHeight) || 0;\r\n  return percentage > threshold;\r\n}\r\n\r\nconst Messages = () => {\r\n  const [messages, setMessage] = useState(null);\r\n  const { chatId } = useParams();\r\n  const [limit, setLimit] = useState(PAGE_SIZE);\r\n  const selfRef = useRef();\r\n\r\n  const isChatEmpty = messages && messages.length === 0;\r\n  const canShowMessages = messages && messages.length > 0;\r\n\r\n  const loadMessages = useCallback(\r\n    limitToLast => {\r\n      const node = selfRef.current;\r\n      messagesRef.off();\r\n\r\n      messagesRef\r\n        .orderByChild('roomId')\r\n        .equalTo(chatId)\r\n        .limitToLast(limitToLast || PAGE_SIZE)\r\n        .on('value', snap => {\r\n          const data = transformToArrayWithId(snap.val());\r\n\r\n          if (shouldScrollToBotom(node)) {\r\n            node.scrollTop = node.scrollHeight;\r\n          }\r\n\r\n          setMessage(data);\r\n        });\r\n      setLimit(p => p + PAGE_SIZE);\r\n    },\r\n    [chatId]\r\n  );\r\n\r\n  const onLoadMore = useCallback(() => {\r\n    const node = selfRef.current;\r\n    const oldHeight = node.scrollHeight;\r\n\r\n    loadMessages(limit);\r\n\r\n    setTimeout(() => {\r\n      const newHeight = node.scrollHeight;\r\n      node.scrollTop = newHeight - oldHeight;\r\n    }, 200);\r\n  }, [loadMessages, limit]);\r\n\r\n  useEffect(() => {\r\n    const node = selfRef.current;\r\n\r\n    loadMessages();\r\n\r\n    setTimeout(() => {\r\n      node.scrollTop = node.scrollHeight;\r\n    }, 200);\r\n\r\n    return () => {\r\n      messagesRef.off('value');\r\n    };\r\n  }, [loadMessages]);\r\n\r\n  const handleAdmin = useCallback(\r\n    async uid => {\r\n      let alertMsg;\r\n      const adminsRef = database.ref(`/rooms/${chatId}/admins`);\r\n      await adminsRef.transaction(admins => {\r\n        if (admins) {\r\n          if (admins[uid]) {\r\n            admins[uid] = null;\r\n            alertMsg = 'Admin privilages removed';\r\n          } else {\r\n            admins[uid] = true;\r\n\r\n            alertMsg = 'Admin privilages granted';\r\n          }\r\n        }\r\n\r\n        return admins;\r\n      });\r\n      Alert.info(alertMsg, 4000);\r\n    },\r\n    [chatId]\r\n  );\r\n  const handleLike = useCallback(async msgId => {\r\n    const { uid } = auth.currentUser;\r\n    const messageRef = database.ref(`/messages/${msgId}`);\r\n    await messageRef.transaction(msg => {\r\n      if (msg) {\r\n        if (msg.likes && msg.likes[uid]) {\r\n          msg.likeCount -= 1;\r\n          msg.likes[uid] = null;\r\n        } else {\r\n          msg.likeCount += 1;\r\n          if (!msg.likes) {\r\n            msg.likes = {};\r\n          }\r\n          msg.likes[uid] = true;\r\n        }\r\n      }\r\n\r\n      return msg;\r\n    });\r\n  }, []);\r\n\r\n  const handleDelete = useCallback(\r\n    async (msgId, file) => {\r\n      // eslint-disable-next-line no-alert\r\n      if (!window.confirm('Delete this Message?')) return;\r\n\r\n      const isLast = messages[messages.length - 1].id === msgId;\r\n\r\n      const update = {};\r\n\r\n      update[`/messages/${msgId}`] = null;\r\n\r\n      if (isLast && messages.length > 1) {\r\n        update[`/rooms/${chatId}/lastMessage`] = {\r\n          ...messages[messages.length - 2],\r\n          msgId: messages[messages.length - 2].id,\r\n        };\r\n      }\r\n\r\n      if (isLast && messages.length === 1) {\r\n        update[`rooms/${chatId}/lastMessage`] = null;\r\n      }\r\n\r\n      try {\r\n        await database.ref().update(update);\r\n        Alert.info('Message Deleted');\r\n      } catch (err) {\r\n        return Alert.error(err.message, 4000);\r\n      }\r\n\r\n      if (file) {\r\n        try {\r\n          const fileRef = storage.refFromURL(file.url);\r\n          await fileRef.delete();\r\n        } catch (err) {\r\n          Alert.error(err.message, 4000);\r\n        }\r\n      }\r\n    },\r\n    [chatId, messages]\r\n  );\r\n\r\n  const renderMessages = () => {\r\n    const groups = groupBy(messages, item =>\r\n      new Date(item.createdAt).toDateString()\r\n    );\r\n\r\n    const items = [];\r\n    Object.keys(groups).forEach(date => {\r\n      items.push(\r\n        <li key={date} className=\"text-center mb-1 padded\">\r\n          {date}\r\n        </li>\r\n      );\r\n\r\n      const msgs = groups[date].map(msg => (\r\n        <MessageItem\r\n          key={msg.id}\r\n          message={msg}\r\n          handleAdmin={handleAdmin}\r\n          handleLike={handleLike}\r\n          handleDelete={handleDelete}\r\n        />\r\n      ));\r\n      items.push(...msgs);\r\n    });\r\n    return items;\r\n  };\r\n\r\n  return (\r\n    <ul ref={selfRef} className=\"msg-list custom-scroll\">\r\n      {messages && messages.length >= PAGE_SIZE && (\r\n        <li className=\"text-center mt-2 mb-2\">\r\n          <Button onClick={onLoadMore} color=\"violet\">\r\n            Load More\r\n          </Button>\r\n        </li>\r\n      )}\r\n      {isChatEmpty && <li>No messages yet...</li>}\r\n      {canShowMessages && renderMessages()}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button, Icon, InputGroup, Modal, Uploader } from 'rsuite';\r\nimport { useModalState } from '../../../../misc/custom-hooks';\r\nimport { storage } from '../../../../misc/firebase';\r\n\r\nconst MAX_FILE_SIZE = 1000 * 1024 * 5;\r\n\r\nconst AttachmentBtnModal = ({ afterUpload }) => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const [fileList, setFileList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { chatId } = useParams();\r\n\r\n  const onChange = fileArr => {\r\n    const filtered = fileArr\r\n      .filter(el => el.blobFile.size <= MAX_FILE_SIZE)\r\n      .slice(0, 5);\r\n    setFileList(filtered);\r\n  };\r\n\r\n  const onUpload = async () => {\r\n    try {\r\n      const uploadPromises = fileList.map(f => {\r\n        return storage\r\n          .ref(`/chat/${chatId}`)\r\n          .child(Date.now() + f.name)\r\n          .put(f.blobFile, { cacheControl: `public,maz-age=${3600 * 24 * 3}` });\r\n      });\r\n      const uploadSnapshots = await Promise.all(uploadPromises);\r\n      const shapePromises = uploadSnapshots.map(async snap => {\r\n        return {\r\n          contentType: snap.metadata.contentType,\r\n          name: snap.metadata.name,\r\n          url: await snap.ref.getDownloadURL(),\r\n        };\r\n      });\r\n\r\n      const files = await Promise.all(shapePromises);\r\n      await afterUpload(files);\r\n      setIsLoading(false);\r\n      close();\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InputGroup.Button onClick={open}>\r\n        <Icon icon=\"attachment\" />\r\n      </InputGroup.Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>Upload Files</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Uploader\r\n            className=\"w-100\"\r\n            autoUpload={false}\r\n            action=\"\"\r\n            fileList={fileList}\r\n            onChange={onChange}\r\n            multiple\r\n            listType=\"picture-text\"\r\n            disabled={isLoading}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button block disabled={isLoading} onClick={onUpload}>\r\n            Send to Chat\r\n          </Button>\r\n          <div className=\"text-right mt-2\">\r\n            <small>*only files less than 5 MB are allowed</small>\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttachmentBtnModal;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { ReactMic } from 'react-mic';\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Icon, InputGroup } from 'rsuite';\r\nimport { storage } from '../../../../misc/firebase';\r\n\r\nconst AudioMsgBtn = ({ afterUpload }) => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const { chatId } = useParams();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const onClick = useCallback(() => {\r\n    setIsRecording(p => !p);\r\n  }, []);\r\n  const onUpload = useCallback(\r\n    async data => {\r\n      setIsLoading(true);\r\n      try {\r\n        const snap = await storage\r\n          .ref(`/chat/${chatId}`)\r\n          .child(`audio_${Date.now()}.mp3`)\r\n          .put(data.blob, { cacheControl: `public,maz-age=${3600 * 24 * 3}` });\r\n\r\n        const file = {\r\n          contentType: snap.metadata.contentType,\r\n          name: snap.metadata.name,\r\n          url: await snap.ref.getDownloadURL(),\r\n        };\r\n        setIsLoading(false);\r\n        afterUpload([file]);\r\n      } catch (error) {\r\n        setIsLoading(false);\r\n        Alert.error(error.message, 4000);\r\n      }\r\n    },\r\n    [afterUpload, chatId]\r\n  );\r\n\r\n  return (\r\n    <InputGroup.Button\r\n      onClick={onClick}\r\n      disabled={isLoading}\r\n      clasName={isRecording ? 'animate-blink' : ''}\r\n    >\r\n      <Icon icon=\"microphone\" />\r\n      <ReactMic\r\n        record={isRecording}\r\n        className=\"d-none \"\r\n        onStop={onUpload}\r\n        mimeType=\"audio/mp3 \"\r\n      />\r\n    </InputGroup.Button>\r\n  );\r\n};\r\n\r\nexport default AudioMsgBtn;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Alert, Icon, Input, InputGroup } from 'rsuite';\r\nimport firebase from 'firebase/compat/app';\r\nimport { useParams } from 'react-router';\r\nimport { useProfile } from '../../../../context/profile.context';\r\nimport { database } from '../../../../misc/firebase';\r\nimport AttachmentBtnModal from './AttachmentBtnModal';\r\nimport AudioMsgBtn from './AudioMsgBtn';\r\n\r\nfunction assembleMessage(profile, chatId) {\r\n  return {\r\n    roomId: chatId,\r\n    author: {\r\n      name: profile.name,\r\n      uid: profile.uid,\r\n      createdAt: profile.createdAt,\r\n      ...(profile.avatar ? { avatar: profile.avatar } : {}),\r\n    },\r\n    createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n    likeCount: 0,\r\n  };\r\n}\r\n\r\nconst Bottom = () => {\r\n  const [input, setInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { profile } = useProfile();\r\n  const { chatId } = useParams();\r\n\r\n  const onInputChange = useCallback(value => {\r\n    setInput(value);\r\n  }, []);\r\n\r\n  const onSendClick = async () => {\r\n    if (input.trim() === '') {\r\n      return;\r\n    }\r\n    const msgData = assembleMessage(profile, chatId);\r\n    msgData.text = input;\r\n    const updates = {};\r\n    const messageId = database.ref('messages').push().key;\r\n    updates[`/messages/${messageId}`] = msgData;\r\n    updates[`/rooms/${chatId}/lastMessage`] = {\r\n      ...msgData,\r\n      msgId: messageId,\r\n    };\r\n    setIsLoading(true);\r\n    try {\r\n      await database.ref().update(updates);\r\n      setInput('');\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      Alert.error(error.message, 4000);\r\n    }\r\n  };\r\n\r\n  const onKeyDown = ev => {\r\n    if (ev.keyCode === 13) {\r\n      ev.preventDefault();\r\n      onSendClick();\r\n    }\r\n  };\r\n\r\n  const afterUpload = useCallback(\r\n    async files => {\r\n      setIsLoading(true);\r\n      const updates = {};\r\n      files.forEach(file => {\r\n        const msgData = assembleMessage(profile, chatId);\r\n        msgData.file = file;\r\n        const messageId = database.ref('messages').push().key;\r\n        updates[`/messages/${messageId}`] = msgData;\r\n      });\r\n      const lastMsgId = Object.keys(updates).pop();\r\n      updates[`/rooms/${chatId}/lastMessage`] = {\r\n        ...updates[lastMsgId],\r\n        msgId: lastMsgId,\r\n      };\r\n      try {\r\n        await database.ref().update(updates);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        setIsLoading(false);\r\n        Alert.error(error.message, 4000);\r\n      }\r\n    },\r\n    [chatId, profile]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <InputGroup>\r\n        <AttachmentBtnModal afterUpload={afterUpload} />\r\n        <AudioMsgBtn afterUpload={afterUpload} />\r\n        <Input\r\n          placeholder=\"Message...\"\r\n          value={input}\r\n          onChange={onInputChange}\r\n          onKeyDown={onKeyDown}\r\n        />\r\n        <InputGroup.Button\r\n          color=\"orange\"\r\n          appearance=\"primary\"\r\n          onClick={onSendClick}\r\n          disabled={isLoading}\r\n        >\r\n          <Icon icon=\"send-o\" />\r\n        </InputGroup.Button>\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bottom;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Loader } from 'rsuite';\r\nimport { useRooms } from '../../context/rooms.context';\r\nimport ChatTop from '../../components/dashboard/chat-window/top';\r\nimport Messages from '../../components/dashboard/chat-window/messages';\r\nimport ChatBottom from '../../components/dashboard/chat-window/bottom';\r\nimport { CurrentRoomProvider } from '../../context/current-room.context';\r\nimport { transformToArray } from '../../misc/helpers';\r\nimport { auth } from '../../misc/firebase';\r\n\r\nconst Chat = () => {\r\n  const { chatId } = useParams();\r\n  const rooms = useRooms();\r\n  if (!rooms) {\r\n    return (\r\n      <Loader center vertical content=\"Loading...\" speed=\"normal\" size=\"md\" />\r\n    );\r\n  }\r\n  const currentRoom = rooms.find(room => room.id === chatId);\r\n  if (!currentRoom) {\r\n    return <h6 className=\"text-center mt-page\">Chat {chatId} not found</h6>;\r\n  }\r\n\r\n  const { name, description } = currentRoom;\r\n  const admins = transformToArray(currentRoom.admins);\r\n  const isAdmin = admins.includes(auth.currentUser.uid);\r\n\r\n  const currentRoomData = {\r\n    name,\r\n    description,\r\n    admins,\r\n    isAdmin,\r\n  };\r\n\r\n  return (\r\n    <CurrentRoomProvider data={currentRoomData}>\r\n      <div className=\"chat-top\">\r\n        <ChatTop />\r\n      </div>\r\n      <div className=\"chat-middle\">\r\n        <Messages />\r\n      </div>\r\n      <div className=\"chat-bottom \">\r\n        <ChatBottom />\r\n      </div>\r\n    </CurrentRoomProvider>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router';\r\nimport { Col, Grid, Row } from 'rsuite';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport { RoomsProvider } from '../../context/rooms.context';\r\nimport { useMediaQuery } from '../../misc/custom-hooks';\r\nimport Chat from './Chat';\r\n\r\nconst Home = () => {\r\n  const isDesktop = useMediaQuery('(min-width: 992px)');\r\n  const { isExact } = useRouteMatch();\r\n  const canRenderSidebar = isDesktop || isExact;\r\n\r\n  return (\r\n    <RoomsProvider>\r\n      <Grid fluid className=\"h-100\">\r\n        <Row className=\"h-100\">\r\n          {canRenderSidebar && (\r\n            <Col xs={24} md={8} className=\"h-100\">\r\n              <Sidebar />\r\n            </Col>\r\n          )}\r\n          <Switch>\r\n            <Route exact path=\"/chat/:chatId\">\r\n              <Col xs={24} md={16} className=\"h-100\">\r\n                <Chat />\r\n              </Col>\r\n            </Route>\r\n            <Route>\r\n              {isDesktop && (\r\n                <Col xs={24} md={16} className=\"h-100\">\r\n                  <h6 className=\"text-center mt-page\">Please select chat</h6>\r\n                </Col>\r\n              )}\r\n            </Route>\r\n          </Switch>\r\n        </Row>\r\n      </Grid>\r\n    </RoomsProvider>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nconst PublicRoute = ({ children, ...routeProps }) => {\r\n  const { isLoading, profile } = useProfile();\r\n  if (isLoading && !profile)\r\n    return (\r\n      <Container>\r\n        <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\r\n      </Container>\r\n    );\r\n  if (profile && !isLoading) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return <Route {...routeProps}>{children}</Route>;\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React from 'react';\r\nimport { Switch } from 'react-router';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\nimport SignIn from './pages/SignIn';\r\nimport './styles/main.scss';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport Home from './pages/home/index';\r\nimport PublicRoute from './components/PublicRoute';\r\nimport { ProfilePrvider } from './context/profile.context';\r\n\r\nfunction App() {\r\n  return (\r\n    <ProfilePrvider>\r\n      <Switch>\r\n        <PublicRoute path=\"/signin\">\r\n          <SignIn />\r\n        </PublicRoute>\r\n        <PrivateRoute path=\"/\">\r\n          <Home />\r\n        </PrivateRoute>\r\n      </Switch>\r\n    </ProfilePrvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './App';\r\n// import * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render( <\r\n    HashRouter >\r\n    <\r\n    App / >\r\n    <\r\n    /HashRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// serviceWorkerRegistration.unregister();\r\n\r\n// reportWebVitals();"],"sourceRoot":""}